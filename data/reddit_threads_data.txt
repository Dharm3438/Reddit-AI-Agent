["How to start python for a complete noob?$$How to start python for a complete noob?\nGo for structured courses, do exercises and ask questions when you are stuck (here on the sub, search online, etc). Here are some excellent free resources:\n\n* [Python Programming by University of Helsinki](https://programming-23.mooc.fi/)\n* [Harvard CS50's Introduction to Programming with Python](https://cs50.harvard.edu/python/2022/)\n* [futurecoder](https://futurecoder.io/) \u2014 interactive, includes integrated debuggers, enhanced tracebacks, hints for exercises and more\n* [The Python Coding Book](https://thepythoncodingbook.com/) \u2014 friendly, relaxed programming book for beginners\n* [PyFlo](https://pyflo.net/) \u2014 interactive beginners guide to becoming a Python programmerI was in that tutorial hell for quite a while, the way I got out of it is to reframe the way I was looking at programming. It was as though I was trying to prepare to program before actually doing anything, really your best bet is to focus on a tangible project - an app, a website, anything - then try and build that. You'll learn how to program in the processCS50p\n\nThat's all you need.Do codecademy. I learned to code there and now (through a LOT of work on my own) several years later I work in tech.\n\nTheir self taught python course is great for learning the basics and also teaching you the fundamentals of coding.\n\nRemember you\u2019re learning programming AND learning python, it can be frustrating but keep at it.\n\nFrom there, I kept building projects on my own and playing coding games like bitburner. (Teaches you JavaScript kinda)\n\nAfter I knew it was what I really wanted, I did a bootcamp (mostly webdev and a little python, I\u2019m more interested in local applications though.)\nafter graduating I found a job through my network that I built there/resources recommended by the school.\n\nAbove all, work on projects that you like.\nBuild things that you personally find useful or fun or nice. I still use the projects I built in bootcamp.A few resources to start with:\n\n[https://www.learnpython.org/](https://www.learnpython.org/)\n\n[https://learnxinyminutes.com/docs/python/](https://learnxinyminutes.com/docs/python/)\n\n[https://www.kaggle.com/learn](https://www.kaggle.com/learn)I\u2019m really enjoying Automate the Boring Stuff with Python (https://automatetheboringstuff.com/) so far. \n\nI\u2019ve also been trying to consolidate my learning by working on small projects using the command line.choose a single book and work through it. you will probably make it around halfway or less until you dont need it anymore and can do whatever you wantHey! Depends on what do you want to do with it? \n\nBest approach is the iterative approach (something I made up) \n\nBasically, learn the basics you need to put your use case together as fast as you can. \n\nFor example:\n\nI wanted to learn data science; I learned just the basics of python, and then read through the documentations of the libraries that I used for data science. \n\nThen, when I became a little more comfortable, I started practicing a little advance functions, like list comprehensions and creating custom functions. \n\nAnd once I mastered that, and was able to use those in my projects, I started learning OOPS. \n\nAnd then data structures. \n\nSo before the intermediate and advance python skills, I had more of a \u2018duct tape\u2019 approach, where I was glueing the pieces together and not caring about the readability of my code. Where as now I try to keep it DRY (Do not repeat yourself). \n\nSo I would advise you to learn the bare minimum. Incorporate the necessary libraries for your use case. Once comfortable, move towards harder bits. \n\nHope this helps, and I\u2019ll be happy to guide you moreprojects.I wish I had found the book \u201cHead First Python\u201d a lot earlier in my journey than I did.freecodecamp.org\n\nHere's the free certifications\n\nhttps://www.freecodecamp.org/learnIf you are getting overwhelmed by all these different comments and tutorial hell then wut u need is a mentor to guide you through. I will be happy to help. You can dm. Trust me ive been there and there is no straight paths try wut u think will work we can discuss I can help and you make your own way by trying every different thing. As a heads up start with basics learn the syntax, and build smthn BY FOLLOWING THE TUTORIAL next build smthn a lil different adding your own flair all by urself. If u get stuck ask chatgpt or stackoverflow or me. Hope it helpssimple. install any IDE and start coding\n\nSince you asked for Python specifically, I strongly recommend The 100 days of code Udemy course from Angela Yu. You can get it very cheap, they have sales most of the time. I got mine for 11\u20ac, and it's 60hours of videosHi, I recommend you to check out the FREE Python course on [crookshanksacademy.com](http://crookshanksacademy.com) by the god of python himself. The course is short and you also get to do a hands on internship after your course completion. Although that internship is unpaid, it is a good and fun learning experience that makes you industry ready. The FREE PYTHON BOOTCAMP is available on: [https://www.crookhsanksacademy.com/python](https://www.crookhsanksacademy.com/python) . Do check it out.No Notes No Revision, No Revision Less Confidence and Motivation while Online learning  \nMany of the times you just stop learning because of the above.  \nWhen I started learning programming few months back I was taking too much time in completing online video tutorials  \nNow I am using google extension OneBook It helps in creating detailed notes in 2 clicks and saves my time as I used to take to much time in completing online videos. I used to waste a lot of time while pausing video in every 2 min and write a couple of line of code and you have to switch tab again and again. With Onebook i complete a video first and then I start coding by refering the notes  \nOneBook helped me in learning programming related skills, it just improves the experience of learning.\n\nChrome extension link :\u00a0[https://chromewebstore.google.com/detail/onebook/loecbgjbgcgjkhibllnjokjefojoheim?utm\\_source=rtc](https://chromewebstore.google.com/detail/onebook/loecbgjbgcgjkhibllnjokjefojoheim?utm_source=rtc)I started here    \nRef: https://www.haihai.ai/chatgpt-api/\n```\nimport openai\n\nmessages = []\nsystem_msg = input(\"What type of chatbot would you like to create? \")\nmessages.append({\"role\": \"system\", \"content\": system_msg})\n\nprint(\"Say hello to your new assistant!\")\nwhile input != \"quit()\": \n    message = input()\n    messages.append({\"role\": \"user\", \"content\": message})\n    response = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\",\n        messages=messages)\n    reply = response[\"choices\"][0][\"message\"][\"content\"]\n    messages.append({\"role\": \"assistant\", \"content\": reply})\n    print(\"\\n\" + reply + \"\\n\")\n```https://youtu.be/mDKM-JtUhhc?si=1SA8pnpQPJnRQ-28 do this video part by part, veery slowly, do all examples on a computer and try to make your own examples, essentially play around with the code and analyse what is going where and all basic functionalities. \n\nNow try to make simple programs like a min max, sorting, arranging, calculator, Fibonacci series generator, quadratic solver, etc. \n\nNow make text based games like interactive stories and such. \n\nAnd finally make complex games like battleship, monopoly, snakes and ladders (text based only) \n\nAnd using a 3rd party library like pygame, you can develop gui interfaces and make simple 2D games... \n\nTo be done over a span of atleast a month or two depending on pace and grasping power of yours.First of all, don't get discouraged by the term \"tutorial hell\". Learning programming, or any new skill for that matter, takes time and effort. The key is to stay consistent and not give up.  \nHere are some steps to help you get started with python:  \n1. **Install Python:** The first step is to download and install Python on your computer. You can get the latest version from the official website - https://www.python.org/downloads/. Make sure to select the right version for your operating system.  \n2. **Choose a learning resource:** There are many resources available online to learn python, including books, tutorials, video courses, and websites. Choose the one that works best for you. Some popular options include Codecademy, Coursera, and YouTube tutorials.  \n3. **Start with the basics:** Python is a high-level, user-friendly programming language, so it's perfect for beginners. Start by learning the basic syntax, data types, and control structures.  \n4. **Practice, practice, practice:** The more you code, the better you'll become. Don't just watch tutorial videos or read books, make sure to practice writing code to solidify your understanding and improve your skills.  \n5. **Work on projects:** To truly develop your skills and gain practical experience, it's essential to work on projects. Start with simple projects and gradually move on to more complex ones. You can find project ideas online or create your own.  \n6. **Engage in the community:** Programming communities are a great source of support and knowledge. Join forums, online groups, or attend meetups to connect with other beginners and experienced developers. They can help answer your questions and provide valuable insights and advice.  \nRemember, learning python (or any programming language) takes time, so don't get discouraged if you face challenges along the way. Keep practicing, be patient, and don't be afraid to ask for help when needed. With dedication and consistency, you'll get the hang of it in no time!Everyone's giving good hints, I would say to stay curious, that's what it's all about\n\nif you are wondering how something works, even if it's not python (maybe networking, filesystem, databases...), look it up! that's at least what helped me \"getting good\". it might help you as well :)Take full courses that are from 1 singular instance or person spanning a wide range of topics. Free or paid can work but at least 4-6+ (more is better) hours of contentSeconding the CS50 courses. Though I would considering starting with CS50X instead of CS50P. It will give you a much better foundation of programming knowledge to bring to learning Python.I started with mike dane at free code camp he is so good in basics, i practiced his examples,  \nThen switched to telusko for django basics  \nthen codemy and dennis ivy for practicing all django tricks. It worked for meThe Python Institute has free training that is geared toward their certification. [Python Essentials 1](https://pythoninstitute.org/python-essentials-1) will start you with the fundamentals. I think the material is quite good since it has coding examples.\n\n[Cisco Skills for All](https://skillsforall.com/) has the same Python course as well.\n\nCombined with the \"100 Days\" Python course from replit.com, you can learn a lot of programming fairly quickly.\n\nRemember to set up your GitHub so you can start building a portfolio as you learn to code.This Python Programming course may help you-\n\n[Python Programming In Depth](http://coursegalaxy.com/course/python-programming.html)BookmarkedThe best thing IMHO, is get a raspberry pi and get a timer to run a script every morning.  Then go to town getting scripts to run from there.  Scrape websites every morning for info that helps you and sends email and or texts on the info.  I find it endlessly useful and each program gets a little better and more complicated as my skills improve.Practice splitting some things that work around you into data structutes and operations on them. If you had to program traffic lights, how, do you do it? Getting change in coins, how many coins? Programming an elevator... Try finding projects that are not super complex and you can easily reason about, than try to wrlite some code.Many of the resources that get mentioned again and again on reddit are also posted here, which is maintained by python.org\n\nhttps://wiki.python.org/moin/BeginnersGuide/NonProgrammersthis link helped me.... wrote my first app with chat: Python Programming with ChatGPT \u2014 A Primer for Regular Kids & Ambitious Adults\u00a0\nhttps://youtu.be/gnPIlDjmb20Im pretty noob too. I got 50% through joses zero to hero then was smoking too much weed and stopped for 8 months. This happened a couple of times actually. Forgot everything and the thought of grinding through all vaguely familiar stuff for another week made me wanna vomit. I came across the programming with mosh tutorial on youtube and in a few days i am almost done with it. it is 6+hrs but actually i think after 3.50hrs it is projects and stuff. \n\nI dunno i just been finding it less of a grind and a bit gentler than the udemy course was. \n\nI was also using the python crash course ebook at times as well when the udemy course got overwhelming.\n\nIt seems like having a few sources of learning helps to break up the monetony and keep you advancing. When you get stuck with one source, give it a rest and try a different source and go back to that later.\n\nI'm also a chef and want to change my career so bad. I have a personal project that generates themed menus based on all the dishes in my repotoire. It would make my job much much easier and it is half done. So having a project you are genuinely interested in and a job you hate is a good motivation to keep going.\n\nI don't know. Just my opinion. Everyone is different i guessI purchased the code academy, love it, I love the interactive ness of it and doing it while learning. First year cs getting aheadPick a project you WANT to achieve. Outcome based learning may help as you get an actual reward for it. \n\n\\- A task that makes a job or life somewhat easier\n\n\\- Make a calculator that works out a specific problem\n\n\\- Make an email sender\n\nWhy do you want to code, is there a point? \n\nIf it's to get a job, build an emailer that sends your resume with an attached PDF to a list of people in Excel, saying, this resume was sent using my own code.\n\nAs you run into problems, that's when you find a matching tutorial to help solve a particular issue.Find an application for it that you're passionate about and jump straight into the deep end!!!I've been making progress using a slightly different route. I've been at it for about a month and a half, and I've gotten to the point where it's starting to click. I can make things happen using these funny little magic words, it's amazing and satisfying.\n\nI started with Sololearn, which is one of those Duolingo style apps. And a lot of people point out correctly that there are a lot of limits to learning this way, but it helped a lot with learning some basic concepts and vocab, which made it easier to understand things I'd pick up elsewhere. I appreciated the gamification, it kept me going on the daily, and it was something I could do on my commute. \n\nOutside of the lessons, where I really started to see progress was doing Sololearn's Code Coaches, which are small projects to solve specific problems, where it tests your code and rewards you for solving them. It required actually applying the ideas I was learning, running into errors, and fixing them. It was truly satisfying when I took a concept I learned from a previous challenge and reapplied it in a new context.\n\nAs the Code Coaches got more complex, I eventually had to download an IDE to test my solutions more efficiently.\n\nThe next ressource I used was Chat GPT, I have a paid account I've been using for other purposes, but it is an excellent tutor. It was great to ask questions, tell it what I was struggling with understanding etc, getting an interactive tutor who I could pester and ask to reexplain things over and over. Sometimes it's hard not to cheat with it, so to speak, and just get the code I need, but even then, I'm noticing that the next time I need similar code, I am more able to do it myself.\n\nI'm nearing the end of the currently available curriculum for Python on Sololearn, which is a bummer. I've solved all the Code Coaches.\n\nNow it's time for projects of my own choosing. I've been making a little text adventure game. So far, so good!\n\nI think I'll be checking out that Automate the Boring stuff.Learn the basics then do a project. Doing an actual project took me from being lost in tutorial hell to being able to write simple programs from scratch. \n\nI\u2019d do a computer science intro course and actually do the homework. Then find a site that gives you prompts for simple apps you can make. Rock paper scissors is a classic one.Bro Code has a 12 hour course. Its what I used to build the fundamentals and familiarity. However, i believe there\u2019s faster ways.As a coding veteran, I can tell you that the key to learning any programming language is to start with the basics and practice consistently. Here are some steps to help you get started on your Python journey:\n\n1. **Install Python:** The first step is to download and install Python on your computer. You can go to the official Python website and download the latest version. It's important to choose the correct version for your operating system.\n2. **Learn the fundamentals:** Before diving into coding, take some time to understand the basic concepts of programming such as variables, data types, loops, conditions, and functions. There are many online resources, tutorials, and books available that can help you learn these fundamentals.\n3. **Code along tutorials:** One of the best ways to learn Python is by coding along with tutorials. There are many YouTube channels and online platforms (such as Codecademy, Coursera, and MyExamCloud) that offer interactive tutorials or practice tests for beginners. This will help you get comfortable with writing code and familiarize yourself with the syntax.\n4. **Practice, practice, practice:** The more you practice, the more you will improve. Once you have a grasp of the basics, try solving coding challenges and exercises. This will help you apply what you have learned and improve your problem-solving skills.\n5. **Join a community:** Joining a community of fellow Python learners and experts can be incredibly helpful. You can ask questions, get feedback on your code, and learn from others' experiences. There are many online forums, Reddit groups, and Meetup groups where you can connect with other Python enthusiasts.\n\nRemember to take it slow and don't get discouraged if you face challenges along the way. Learning to code takes time and practice, so be patient and keep at it. Good luck!Once you have watched some basic tutorials ask ChatGPT to give you some tasks and tell it what concepts you learnt. Worked amazing to get that direct feedback and to be able to ask questionsWhat is your goal?More love for Angela Yu - I was taking a Coursera course and getting lost. It was moving too fast with not enough explained along the way. Angela Yu achieve a good balance of explaining with lots of little coding challenges to get your fingers and brain moving. \n\nI make it a point to solve all of her challenges on my own without cheating. I have very occasionally used ChatGPT to explain a concept further, refresh my memory, or chase down a syntax bug I just couldn't see. \n\nI think combining her python course with a more computer science oriented course (Harvard CS50) would provide one with a goof base of knowledge. \n\nI have How To Automate the Boring Stuff on deck for my next resource. \n\n\\----\n\nIt's funny I'm also doing Jose Portilla's SQL bootcamp course and while he is good and highly rated, he is no Angela Yu. It's kind of amazing how her enthusiasm comes through with an online course.Use a book.having a purpose or goal helps you learn. name a problem you would like to solve.\n\nor something you do repeatedly that you want to automate", "YSK that Harvard recently launched an Intro to Programming with Python, and it includes a free certificate of completion.$$YSK that Harvard recently launched an Intro to Programming with Python, and it includes a free certificate of completion.\nHave been promoting this for people who want to learn programming for free for some time now. Failed this class before it was free myself (learning python and C in 8 weeks was just too quick for me).MIT has a ton of free classes beyond intro level, even grad CS courses \n\nhttps://ocw.mit.edu/To get started:\n\n* Here's the course's first lecture: [https://cs50.harvard.edu/python/2022/weeks/0/](https://cs50.harvard.edu/python/2022/weeks/0/)\n* Here's the first problem set: [https://cs50.harvard.edu/python/2022/psets/0/](https://cs50.harvard.edu/python/2022/psets/0/)\n\nOnce you complete all the problem sets and final project, you unlock the free certificate of completion from Harvard.\n\nHappy learning! :)Not sure if it's only for me but all the links seem to reroute to edX and the only way to get a certificate seems to pay the 146$.\n\nThanks for sharing though I will be taking the course either way.I just finished the course and it's awesome. There are around 20 hours of video training to watch, featuring Harvard's excellent David J. Malan. During the class you have the opportunity of completing 41 Python programming projects, and then a final project. \n\nIt takes a few steps (and a bit of research) to set up the edX, Harvard CourseWare, and GitHub accounts and link them together, but then the programming exercises are fairly straightforward. Took me about a month total to complete the instruction and labs.\n\nThis page has the step-by-step guide for setting up the lab environment for the problem sets (you will need to set up a GitHub account before starting):\n\nhttps://cs50.harvard.edu/python/2022/psets/0/So after completing the course would you be able to get a job with it? And if so what is the entry level pay for such a position?Many thanks to OP! I am a nurse and have no previous knowledge of programming (and was born in '77, so am not a digital born). I watched the first video of the CS50 yesterday, was fascinated almost from the very beginning and today am pseudocoding my first program in Scratch! I'll no doubt check Python too. Again, thanks!\n\nBTW could I ask a few questions (course-related) via dm? TIA\n\nEdit: I encourage everybody with a bit of curiosity to play the first video of CS50, you won't regret it. Don't let the 105 minutes drag you down, just start it. I think you'll get to the end of it and will be wanting for more.The knowledge is useful but people should know that the certificate itself is basically useless. Employers know how online certificates work and they really don't care about them.\n\nPython SKILLS are valuable, but you can learn those in many places, so people should just pick the style of learning that's best for them. \n\nHaving \"Harvard\" on your resume doesn't impress anyone unless it's followed by an actual degree. Online certs are generally easy to game, there's no accreditation, and very little actual grading (and certainly no grading by an actual professor). \n\nIn a previous job I actually interviewed a bunch of employers and recruiters in the data science field about what they were looking for in good hires. Want to know a word that none of them said in hundreds of pages of transcripts? \"Certificate\". All of these conversations were about job applications and what gets people hired, and literally not a single one of them mentioned certificates even one time.\n\n**That doesn't mean you need to get a degree though!** Overwhelmingly, employers in tech care about skills. If you have the python skills to build cool shit and you can prove that by showing them the cool shit you built, you're in good shape. So just learn Python on whatever platform clicks for you, and then start building.I have no background in coding, can I go for it, or do something else first?As someone who doesn't know anything about programming, should I start with python or CS?Sweet now I can put Harvard on my resumeI started programming with his CS50 course. It was an amazing experience that I recommend for everyone.Nice i just started learning pythonIs there a subreddit which gives information about free cs courses?Does anyone know if you can do this on a chrome book?  My son needs something to do.I'm taking this now. Scratch is awesome, and as someone who was never good at puzzle esque thinking and was simply hesitant to start coding at all, I couldn't be happier and I feel like I'm actually learning and retaining information.Is this a real-time sort of course or can you do this at your own pace (faster or slower) by a certain end of course date? Have no experience with online courses and not sure how they work. Thanks for sharing, this is very interestingThank you for sharing this info!OP, i checked the harvard edu link for python and it still says to get the verified certificate we need to have an edx account. Did you need an edx account?Jesus Christ, thanks for sharing this information. You sir are a hero!Is this a self guided, do at your own pace sort of course?YSK that you don't need Harvard or MIT to learn programming language. \n\nBut it can help with low level understanding how it works.Also worth knowing: american companies are trying to farm out development work overseas because it\u2019s so much cheaper to pay a Ukrainian who speaks English to make their app than it is to hire an american of equal talent. \n\nThis career field is not likely to be viable for the total population of people trying to enter the workforce from college with degrees in this field.Is the certificate worth anything? Like professionally?Harvard course for free.That's great!I'm not sure how to make sure to save a thread for later so I'm writing this, I will delete it when I get off work.   Thank you very much OP, this looks amazing.NiceI think I once looked at the main cs50 course and thought it seemed way beyond me.\n\nMaybe I'll try do this Python course and go from there!If anyone is familiar, would you suggest this course or Angela Yu's 100 days one? I am focused only on Python and no CS stuff. \n\nEdit: added the name of the actual course and some clarity.Any tips on how I can add to my finance degree and move into the FinTech field? I\u2019m not sure if Python would help me in my areaThis is my professor and he\u2019s super good in explaining concept. SO GOOD!How is this course vs Udemy? Specifically \"100 Days of Code: The Complete Python Pro Bootcamp for 2022\" which I bought recently but haven't started yet.Thank you so much for this! I am new to data analysis and I have no clue about Python or programming. Can this course be done anytime or is there a time limit to complete this course? I am already working on another course on Power Query but I would also like to learn thisDoes anyone know how is this compared to automate the boring stuff for python for a beginner?How hard is it for someone with limited coding experience?(I have use HTML and CSS to write a website for my FYP in high-school but I forgot everything about them lol)\n\nAnd is the course available for foreigner?I tried the same course but with Java many years ago. The first assignment was to make Karel the robot follow a path on a map. I loved it even though I never solved any of themCommenting so I can find this later :)If you already know a scripting language, it might be easier to learn using search engines, assuming you have a specific project in mind.Hey man, put Harvard on your resume ..  why not?I'd take it to say I studied at Harvard and received certificationAny idea if it could be taken in Spanish?Wow I appreciate this so much I was about to start paying for a python course this is insanely helpful for me I'm bookmarking it.\nThank you!I'm a little confused. So just follow everything on the Harvard CS50x website? Afterwards how would you get your free certificate? It keeps telling me to go through edX to get a verified certificate for $199Thank you for this information man, it's something I'm definitely going to look into, I really need to find a gigOP would it be advisable that  I do the the intro toCS course before doing this ? or Can I jump in to the intro to python. Don't have any prior coding experience, but have a basic idea.\n\nThanksIn all honesty how does this look on ones resume? I've had a hard time writing up my \"skills\" because it just seems petty to tell someone Im proficient at \"Windows\" so I'm looking to add more skills like this even though I really just want to do hardware related stuff.This made me think about how Amazon had a program called ATA or something saying you can apply even with no previous experience, and didn\u2019t reply to a single email directed at the \u201cIf you have any questions, contact this email.\u201d\n\nI think the next time they did it was improved but it left everyone skeptical at the bad performance. \u201cIf they wanted experts they should have just said so. Not advertise to inexperienced, give confusing/in accessible resources, not respond to emails, and require a project done that\u2019s only accessible within the building computers, despite neither of them having the software needed installed.Harvard\u2019s Intro to Programming with Python, including a free certificate of completion! Awesome! Thanks so much for sharing \ud83d\ude0a\u2764\ufe0fThank you for sharing about the cs class! I read that post and decided to give the class a try. It's definitely different than what I'm used to (i work in healthcare) but I'm surprised at how much I enjoy it!Where can I learn for the more advanced stuff (i.e. data structures and algorithms)?Saved 4l8ter.I did a good amount of this course before entering my Master\u2019s program in Applied Mathematics. It helped tremendously to learn the basics of Python, and definitely recommend.Thank you for this.I tried soooooooo hard to do the EDX one and got stuck quickly. I managed to do the first few lessons with scratch and whatnot but couldn't get much further. Maybe I'll try again but I was so excited with my progress that the sudden halt really threw me offThank you I was trying to find something where I could learn Python without paying more money. You can only do so many Udemy courses before you\u2019re fried and the knowledge gap is frustrating. \n\nTrying to keep up with certs and advance in my career by shortening my timeline. This will hopefully help me escape the dump I live in right now.Yes!remind me 160 hSo how\u2019s this work , I\u2019m interested but don\u2019t know what to expectHow difficult is this to do? It looks difficult, just considering that isn't even clear how to start it, and I don't really know if it's for me.RemindMe! 8 daysMy wife has expressed interest in learning programming/development. This might be just the thing for her. I've offered to teach her, but she hasn't taken me up on it yet.Thanks for this!Very cool!Idk if this is the place to ask, but how long would it take with daily practice to learn Python well enough to make a job of it? No prior experience with any language.Everyone YSK there are a lot of free courses from universities like Harvard, MIT, Cambridge online. This is not the only one.From someone who knows nothing about programming languages, but would like to learn to automate things, is Python or R the right language to start with please?Love this!Thank you! This is VERY helpful.Can you do this on phones? Or is it only for PCCan a person with no knowledge of programming join this?Someone complete it with my username and email me certificate too\n\nI would like to become computer kingSuper cool/u/howtochoose\"Yea I went to Harvard, even got my certificate!\"I've been thinking about getting into programmingOp, how do i sign up from the link provided? I don't see a sign up anywhereDotThat\u2019s awesome! Thanks for sharing!Do you just submit the problem answersHello! Does anyone know if taking this course would impact my GPA at another college, or if I\u2019d have to show it on my college transcript?Is it free forever, or a limited of time? If I sign up it starts right away, but I'm in the middle of studying for MS Azure AZ-900That's like having your grandparents help you with technologyThank you!YSK those certificates mean Jack shit and will likely make hiring managers dump your resume in the trash. You're better off making a github, taking the course, and put your projects on github then putting the link to your github it in/on your resume (assuming your code isn't a complete mess)Thank you!Thank you! I can\u2019t wait to get this cert for free.Is the OpenCourseWare certificate verified like it is on EdX?SavedThank you!This is fantastic thank you!Thanks! I'm saving this post!Thank you!!!Does it not ask to upgrade in order to get certificateThanks for the heads up! Just enrolled into the free edition.Woah! Thanks! I was just starting the one on edX. I very much appreciate this post!My son has just started learning python. This will be a perfect supplement. Thank you.Remindme! 15 daysCool.  Thanks for sharing.Does anyone know if recruiters/hiring managers take a free certificate of course completion into account? Or do they just think \u201coh it\u2019s just the free 9 week course, *shrug*\u201d?NiceThanks.Woah, very cool! I just got an IT cert because i am trying to switch fields. I might as well take these courses too. Thanks OP!How many hours would you say the course takes? And does the certificate say Harvard anywhere on it? In the link you attached I didn't see the college name anywhere.Hot damn I'll give it a go.Get this free Python certificate from Harvard University!wait is this the case for every edX course ? i\u2019m taking a stanford SQL course on there but don\u2019t really want to pay for the certificateAwesome!Estonia teaches coding in grade school.. you don\u2019t move onto the next grade without the selected proficiency being met. \n\nI think that is badass. Anyone who\u2019s started to learn coding and quit was in the beginning. If you kinda push it, you open some amazing doors. Imagine if we lived in a world where knowing a coding language was as common as knowing a written/spoken language? \n\nIt\u2019s essential.says it's $199 if you want the certificateWhat\u2019s the point of the certificate besides making yourself feel good? I\u2019ve never heard of jobs giving it any extra consideration[deleted]Is there any code? Because it says Audit for free and add verified certificate for 149$Great resource thank youI tried once before and failed. Dare i try again?u/manocormen do you receive a certificate after the course?Anybody could help me. I've downloaded VS Code for Windows and it's different from that in the lecture. Is it because he's teaching on Mac?Certificate doesn't mean a whole heck of a lot. It might get someones attention on a resume, but that's about it.Does this course expire?Very interested in this as a personal development thing! Thanks! In all honesty what sort of things would you expect someone having done this course to be able to create? I read the syllabus, debugging, using libraries etc etc. but practically what sort of example programs would become possible? I know this is a daft question, just struggling to make it coherent !Holy shit. I\u2019ve been trying to get into coding and it seems everything is heading that way and I\u2019ve never done anything of the sort. This is pretty awesome.The MIT course I took was awful. \n\nI came up with correct solutions, albeit, outside of the box. The algorithm just deemed them wrong because it wasn't exactly the answer the programming wanted. I reached out, but they just kind of didn't care. It wasn't free either. \n\nCertainly learned a lot, but gave up on Python because of the experience. \n\nMaybe I'll try again. \n\nThanks OP!Fuck, I started cs50 like a year ago and I\u2019m only halfway through. I really should finish itYou should also know that a lot of libraries provide access to Udemy Business for free! So you can augment what you learn at Harvard with Udemy classes!LPT: most recruiters don\u2019t give a shit about certificates of completion for these professional courses unless it\u2019s that well known. \n\nMost valuable certifications will require you to complete a test/exam before you get it so don\u2019t waste your money if the only thing you\u2019re looking for is the education/information.Is it available in Canada?https://alison.com/affiliates/success?utm\\_source%3Dalison\\_user%26utm\\_medium%3Daffiliates%26utm\\_campaign%3D25445544Strange, i punched this address into my browser and it automatically changed it to an edx domain. stranger still, it only recognises the edx site whenever i punch it in on a fresh browser screen (chrome)Hell yeah! CS50 is the shit! I recommend anything that David J. Malan is involved in, the guy is great.Should I buy the certificatePython \ud83e\udd2e\ud83e\udd2eOkThis is posted at least once a month.These would be cool little show offs, is there any way to skip the work and get the certificate? I don\u2019t care too much about programmingThanks, I'll remember that the next time I go to Harvard and want to use a scripting language that is so shitty I literally use Perl instead.[deleted]YSK this course and certificate are worthless and noone will care about themRemindMe! 3 Months \"Do this too\"A little late question here; are you supposed to complete the course within a certain timeframe?Is it known until when the course is available? I'm very interested, but have my finals coming up. I hope I can still do it until Spring next year? And if I do enroll in it, do I have a specific time frame to complete the problem sets? Hence, could I fail if I take too long? Thank you.", "switching from python to almost any other programing language$$switching from python to almost any other programing language\nHad to go from C# to VB to work on someone else's legacy project was super frustrating. Give me my goddamn brackets and semicolons!!Or switching to badly written js - \u201csemicolons ... some places\u201dPython supports semicolons, just in case you wanted to pull a:  \n`blayblah@bash$ python3 -c \"a=int(input('What is a?'));print(a);a+=1;print(a)\"`  \nSo you can have a one liner, executed from the command line if you were too lazy to write a script for it and you only needed it once.Switching to PHP and you are suddenly rich. Because Dollars... Dollars everywhere!here i am, coding Golang and having no clue what OP is talking aboutCool hack: if you switch from python to assembly you won't have to worry about semicolonsThere are a lot of languages where semicolons aren't mandatory.\n\nThe real thing that is REALLY bothering with Python is the lack of curly braces. Sometimes it just makes the code really tedious to read, or even edit, for absolutely no reason.at least they're visible, unlike certain other characters that are vital to the python syntax...KotlinFrom anything to a lisp like: parens, parens everywhere[deleted]Why does reddit hate Python so much now? Everyone here worshipped it two years ago.Funny. That's the same meme for \"when I program in Python\" ;)Switching back and forth between coding in Python and coding in Javascript is fun! I'm still fairly new with both, so it's interesting to go between the two in the same project!Being able to define your scope and organize your code within it how you want... Being able to define your scope and organize your code within it how you want everywhere.[deleted][deleted]semi colons act as emotional closure for me. \n\ndont hate.laughs in \\*Clojure\\*Join the Scala, Javascript, Golang club!I had this experience, and now several years later I\u2019m back to python and keep accidentally typing parentheses and semicolons everywhere!Swift FTWHow about fortran, don't need tabs or semicolons. The later are only used to put two lines in one line.Felt this hard moving from a Ruby to PHP back endAt my job I switch between perl and python fairly regularly. And I have absolutely forgotten I'm working in perl, and I'm all confused when my script blows up because it has no brackets or semi colonsAlpharad plus fans be likeThis also applies to the Plussy fan basePython just feels so dirty;\n\nOh? I need a new variable cause i forgot one? Better get my magic hat to pull one out. What is that variable, you may ask? I dont know, could be anything;\n\nI dont need such chaos in my spaghetti;If semicolons bother you that much, maybe programming is not for you. It would be a dream if my worst problems were missing semicolons or misplaced curly braces.Python code looks clean but  I don\u2019t like it because it is interpretedKotlin all the waySome ppl use semicolon even in python\ud83d\ude11\ud83d\ude11Na really in ES6+ js in a browser context you don't have to, but to close a Promise.\n\nThe downside is corporate grade linters raisings warnings.Python feels wierd. How does the interpreter know?I even end my comments in semicolons.Sounds like you need a more groovy programming languageswitching from any other language to python: \n\n\u00a0       colons and tabs everywhereKotlin is good enough... without java boilerplateI do Java professionally and a little python here and there for side stuff. I often mess up and drop some semicolons into python.Mincraft;At least they fail because of something else than a f**ing tab.\n\nSry, I would never get why a tabulation have a programming meaning else than making the code look good;I personally like them. When I place them, it feels like a full stop at the end of well written sentence.Rust checking in. Can confirm. Lots of commas too.\n\nRust does something rather interesting with semicolons, though. If the final statement in a block is an expression and it doesn't have a semicolon, then the block returns whatever that final expression evaluates to. If it does have a semicolon, then the block returns `()` (i.e. nothing, like `void` in C).\n\nSo, if you write `let x = { do_stuff(); };` then `x == ()`, but if you write `let x = { do_stuff() };` then `x` contains whatever `do_stuff` returns.\n\nI'm not sure whether this is awesomely nuanced or horribly confusing. Maybe both.Honestly I was irritated at first but I like semicolons. I liked Python's simplicity (and still do) but strongly typed languages are just so much more powerful, you get a sort of granular control of what you want to do whereas with ones like Python way too many of your errors are list you learning some new idiosyncrasy of the interpreter. Explicit is better than implicit, and with Python, so much is implicit that you don't realize til you've written in a strongly typed language.I use semi-colons in pythonLook at OP's lack of punctuation or capital letters in their post title, without any irony whatsoever.TI-BASIC is a language that doesn't have semicolons that I know of. It just has \"End\"s after a loop. Can't indent on TI CALCs.Same with Lua :(I adhere to the NPM school of writing semicolon-free JavaScript. I've gotten so much flak from my coworkers over the years about this, but my God I despise writing semicolons. It's not even an issue guys, we have a damn precommit hook![deleted]Python is da bestGo to ruby!Not the case for JavascriptI've been working with vue non-stop for a year and god I miss my good ol' semicolonsThe semicolons are mandatory. The lines are not tho...", "Language skills are a stronger predictor of programming ability than math skills. After examining the neurocognitive abilities of adults as they learned Python, scientists find those who learned it faster, & with greater accuracy, tended to have a mix of strong problem-solving & language abilities.$$Language skills are a stronger predictor of programming ability than math skills. After examining the neurocognitive abilities of adults as they learned Python, scientists find those who learned it faster, & with greater accuracy, tended to have a mix of strong problem-solving & language abilities.\nAssuming this is the same article--\n\n[As pointed out on r/programming](https://reddit.com/r/programming/comments/fce5kp/language_skills_are_stronger_predictor_of/fjadxsj/), this study has a number of weaknesses.  From the perspective of a software engineer, the most glaring weakness is that this really was **measuring the ability to learn the basics of the language, not general programming ability**, as claimed in the title.  It's well-understood within the field that it takes *years* of regular practice to become proficient.  [Snarky comic, for anecdata.](https://abstrusegoose.com/249)\n\nEDIT:\n\nIf you were to survey developers for opinions about the correct progression of how to teach a programming language, a general trend that would emerge is that syntax is approximately the first thing you teach.  But there is much beyond learning syntax.  So (without trying to imply a causal link, here), it's not surprising at all that a study looking at the early phases of learning programming, would yield results consistent with the general opinion of what the early phases of learning programming, look like.  So my issue with the title is that it doesn't address the perceived  (again, no proven link, here) step change from syntax-oriented learning to symbolic-logic-oriented learning, which a somewhat less scientific survey would show.  IMO, if you're making claims about predictors of programming ability, you need to design your study to follow the students much longer-term.The research linked actually shows fluid reasoning was the strongest indicator but skill in numeracy was not as strong a predictor as language skill. Numeracy is a very small subset of Mathematics. Mathematics at university level is much more about fluid reasoning than numeracy. So I would say actually mathematics skill is actually a good predictor.Learning python and learning to develop algorithms are two different skills. I can see how people who have better language skills learn to use python faster, but I would anticipate that math skills are crucial to understanding and developing algorithmsLearning the programming language is a whole different story from learning programming. Learning programming means acquiring problem solving skills Independent of the specific language chosen.\nCompare it to writing a novel in spanish: Of course good language skills in spanish are a requirement to writing a good spanish novel but that alone won't make you a good writer[deleted]Nobody hires you or thinks you're a good programmer because you know the language, they hire you because you're a good problem solver which can be associated with good math skills.Maybe the reason is modern programming languages are trying to get closer to human language? Assembler might be different.\n\nThat said, I remember how they tortured us with theoretical math in an IT course at the brink of the 90's. I hated it, but I loved programming and I wanted to go into AI. I dropped out because of the math, and went to study languages. I wish they'd done things differently.That's interesting; my high-school teacher couldn't comprehend how I could pick up coding so easily while I was struggling in his maths class. I do have a knack for learning languages (and patterns, moreover), so perhaps that has something to do with it.It's a nice study, but I don't think it measures programming ability.\n\nThere are also different kind of programming abilities for different kind of tasks.\n\nSome tasks need to be more accurate, organized, bug free. Some tasks requires more design, macro level thinking, and dealing with large complicated software.\n\nSome tasks require technical programming, and delivering algorithm implementations with good performance.\n\nHow fast someone learns a language does not necessarily mean he is good in any of the former tasks.So there were 2 parts:\n\n- Answer a multiple choice test about Python syntax\n\n- Make a rock-paper-scissors game with the steps broken down for you\n\nLearning syntax is useful but has little to do with \"programming ability\". Knowing a lot of words does not make someone a good writer. Most programmers look up basic syntax every day.\n\nAs for the RPS game, it sounds like they negated the real indicator of programming ability by breaking down the project into steps (with instructions!) for the subject. I'd have to see the actual Codeacademy test to judge, of course.\n\nAs someone who majored in CS I'll tell you the majority of our projects were in pseudocode (ie make up your own syntax, as long as people understand it). Knowing specific syntax was not relevant.I wish more programmers understood the writing process as programming is basically the same thing\n\nbrainstorm (plan, whiteboard, etc)\n\nrough draft (initial PR)\n\nedits / revisions\n\nproofread (look over your damn code like it's somebody\nelse's)\n\npublish (merge PR after approval)[deleted]Aren't mathematics skills and language skills similar? Mathematics is a formal language.Isn't math a language?I work for a reputable tech company and my educational background is not math or even science related.\n\nSome of the best programmers at my work don't have a background in mathematics. One of our brightest has an arts educational background.This is programming language dependent.  Try APL on for size.Well, I'm blowing this curve. I've used over 15 programming languages in my life, but was relatively worthless after four years of French in high school.\n\nFor me, it's largely that programming languages are (mostly) consistent, whereas spoken languages are endless series of exceptions.I'd like to see this with a language like C.  Python is not a good indicator of good programming, it's just easy to write.  I say that as a Java developer who uses Python for all my personal projectsMath is kinda like a language itself.I have degrees in computer science and law. I've found that programming and interpreting legislation use very much the same parts of my brain.\n\nBoth are about logic, and being able to express something, not math.I think a lot of people in this thread are getting around, in one or another, to an important point about any advanced topic. There really isn't just one part of the brain engaged in a subject. When people are doing math, or listening to music, or programming, they're variously engaging many different parts of their brain in complex ways at different times in the process. You really can't talk about math skills, language skills, or programming skills. And these might be very different from the skills of being an actual working programmer or mathematician. You have to be way more specific than that, and you have to be clear about what your data is actually measuring.\n\nI remember reading a book on just research about human and animals ability to estimate quantity and by the end of the book there was a chapter that was basically \"anyway, when we put mathematicians into an MRI that part of the brain wasn't even activated when doing anything more advanced than arithmetic.\"Thank you, this is just what I needed to see. I have always loved literature and I'd like to think I have good command of the English language. I recently decided to join a coding bootcamp but somewhere inside I felt that only analytical people with good math skills could make good coders. Sometimes I get imposter syndrome. This study gives me hope for myself.What a misleading and wrong headline.I'd say it's more than likely that problem-solving is the main factor at play here.[deleted]What I look for when hiring a developer (in this order):\n\n1. EXCELLENT verbal and reading comprehension\n2. EXCELLENT written communication\n3. Abstract reasoning\n4. Self-directed learning and perseverance\n5. Specific programming language and framework experience\n\n(5) means nothing without (1)-(4).\n\nDevelopment in a nutshell: you have to gain a highly nuanced understanding of people's problems, communicate and confirm your assumptions, use abstract reasoning and abstraction to devise a solution, learn HOW to implement the solution, and only then can you translate these abstractions into a written language for consumption by a computer system.In my senior year in college, my French professor suggested I get a masters in linguistics, because I had a strong aptitude for language.  I didn't know how to pay for it, so I declined and instead graduated with my B.A. in Psychology and went on my way. \n\nFive years later, I \"fell into\" software development, and fifteen years later, at 40, I'm still doing it. \n\nThis article makes my life make sense.It's almost as if it isn't a coincidence that they're called programming languages.Kind of obvious, really. \n\nThe scientists and mathematicians writing algorithms (or \"10x\" programmers getting to MVP for that matter) are a small sliver of the field. The vast majority of programmers have been doing RAD for decades, which I like to think has *always* stood for Repair, Assembly, & Documentation.When I started programming everyone said that programming involved a lot of math.  I was waiting for the math part, but it never really came up.\n\nProgramming is a tool for doing math.  Saying you have to be good at math to program is like saying you have to be good at math to use a calculator.As a computer programmer, I am unsure as to why so many people think the job is related to math.\n\nUnless you're doing some very specific things, programming really has very little to do with math. You might be able to use math to describe things you do in programming, but you don't have to know it to be a decent programmer.\n\nComputer programming is all about logical thinking and abstraction of problems.[removed]I suspected this was true when I was learning pythonProgramming does uses Math, but is not only Math, requires hability to express and model ideas in text / verbal ways ...As a programmer Math isn\u2019t needed hardly at all beyond basic arithmeticSure, nooow you tell me to pursue my dreamshmm, that's interesting.  as an anecdote: i also felt like I was mostly learning a language when I started to learn Python.  I think most importantly, from the title, having language abilities would seem logical as an advantage for picking up Python more quickly, but that's not the same as saying language abilities make for better programming skills in the end.As a Literature major with a very successful Silicon Valley career (which has included hiring several fellow humanities majors, all of whom we're similarly successful) ... this doesn't surprise me in the slightest.\n\nI've long known that you use the same parts of your brain to write essays as you use to write code, but it's nice to see science backing it up.This explains why I suck at programming. I\u2019m good with reading and playing and writing music though, so who knows. Is that more math or musical language...?Believe it 100s in programming classes, D's in Calculus. Ridiculous degree requirements.I picked up programming as a hobby while working as Japanese translator and now I've got 4 years under my belt as a software engineer. I always say it was easier because I already spoke a foreign language.Can someone do a study on how long it takes for programming threads like this devolve into an absolute \"no you're wrong!\" sh\\*tshow?Good language skills???\nif I can google my error properly then I can  successfully code !!!I really need to go take a Python class, even if I am an old fart. Because I have strong language abilities AND strong problem-solving. \n\n(basically, I'm a copyeditor, and I think those skills would translate)Im taking programming classes next year and i really enjoy programming with the little stuff im learning right now on my own but im not great or bad at math just a slow learner in it, if math skills are really that important ill just give up on itDoesn\u2019t this just mean smarter / more intelligent in general ?Is no one else concerned that the sample size was only 36 participants? That can\u2019t be sufficient enough to make any real conclusions.It definitely depends on the language you learn or framework you use. A good speaker may not be a good assembly or C dev for example, for it asks for lots of logic for optimisation / memory managementPersonally I'd argue if youre only looking at Python, of course Language skills are a better predictor since the language is essentially English with a little syntax mixed in. They did mention that people who had stronger math skills learned Boolean logic faster, which makes sense because thats the most math-oriented segment of Python. Only had a chance to skim the paper, so correct me if im wrong, but I'd say if they are attempting to correlate the Python data to other languages, then it is more than a drop disingenuous. In my opinion, Python is a very introductory language (although it can be used for high level programming like AI and data science), but I'd like to see the same exact study repeated with C++, or more \"complex\" languages.I'm a programmer and have good problem solving and maths skills (if I say so myself), but I suck at learning foreign languages. I've tried learning French about 6 times now and always get stuck and give up at the same point.\n\nMy English is top notch though. Nothing irks me more than improper grammer and use of language.I consider myself a  very strong programmer but my math skills are just serviceable. I do think that having strong math skills is a big bonus however.So this why me not can do.I am anecdotal proof of this. I am a software developer that has advanced quickly in my profession. I have excellent problem solving skills, very solid vocabulary and grammar, and (academically) adequate math skills.That's reassuring, it was hell to have to get through Calculus III and linear algebra to finish my CS degree. And it created the impression that if I was really meant for this I'd be natural at math, which I'm not at all. \n\nWhat it took to do well in the higher math classes was amazing amounts of memorization and strict rule following.  Perhaps that is just a flaw in how math is taught in the US that every single problem requires the direct implementation of formulas learned in the class, with no creative thinking, experimentation or unique solutions encouraged.I would say the ability to simply think critically is the key to programming. Syntax is readily available if you look for it. The ability to take that syntax and create useful programs is where you need to have a great critical thinking ability. People good at math just tend to have a high output of critical thinking. People good at learning multiple languages also tend to have a high output of critical thinking. It's taking unnecessary generalizations and trying to generate fact.I love how the data presented regarding Python learning was likely generated using MatPlotLib. Meta.As a 25+ year professional in development, it's been my experience that this is true - but there's a better correlation: musical proficiency.\n\nI've found that the best people I've ever worked with have some sort of musical training - guitar, violin, drums, etc.  Similarly, cooking prowess.  There's lots of transferrable and similar skills across seemingly disparate topics that align nicely.No surprise. Programming is basically just learning a foreign language, and then learning how to write based off a foreign language that cannot be used as adjectives and must be exactly used by definition.\u201cProgramming is the art of telling another human being what one wants the computer to do.\u201d - knuth\n\nEven more important than understanding coding well enough to \"barely code\", strong language skills are crucial to writing maintainable code.Ha I've always been pretty dumb at math, but strong with language and speaking. People have always felt I'm a robot.dont think so. programming is less about syntax and rules which are language skill friendly but is more about algorithms which are pure mathematical problems.Certainly better than the Python -> Prison variantIm a programmer and other language has always been my downside. I could learn neuroscience faster than I could another, non-programming, language.The only word I know in Python is \u201chissssss\u201dI'm terrible at languages and couldn't code a hello world out of a wet paper bag, I am the evidence for this thread.This is interesting to me specifically because mathematics is something I didn\u2019t really \u201cget\u201d at school, I got a 3 grade for mathematics and a 2 grade for arithmetic at school (the exams you take around age 16) aced English though with a 1 grade and I failed higher mathematics at school - my first year at college I studied electrical and electronic engineering, in that way I got hands on with logic, literally with a soldering iron and it was obvious, later using integration to determine which capacitor to use, calculus fell into place.  All the while, programming was part of the course, which just came to me naturally (to be fair hobbyist from my youth).  At some point, applied mathematics and programming/logic just fell together in my brain, but I needed the application to make it meaningful I think.  Now my day job is often all about collapsing logic and it\u2019s basically firmware now, which I realised when I tried to teach it to others (selfishly to delegate)\n\n[edit] on reflection giving a brain like mine a \u201chow\u201d without a \u201cwhy\u201d is probably why loads of people seemingly proudly claim that they\u2019re no good at maths\n\n[edit2] I\u2019m am a programmer btw, actually *was* a programmer, now I\u2019m a Business Analyst ostensibly, but in practice that\u2019s really a programmer at a higher level, I still keep my hands in the soil, but I now describe things in terms of problems for groups of programmers to solveMy buddy learned Python very quick, he is bilingual. However, it should be noted he's the smartest dude I know personally; had so many AP credits that he could've finished college in 3 semesters. That being said, it's entirely possible that being bilingual has nothing to do with him learning Python quickly and it's just his intelligence.Anecdotal evidence mixed with personal biases: yes, this. I was a god at math before programming. Now I lazily use a calculator or spreadsheets to mock any math before writing those functions into code. It seems an obvious thing, but I used to feel a confident enough mathematician to write once and know my formulas to be correct. Yet somehow along the way I\u2019ve picked up and become quite fluent in Spanish, Japanese, and Chinese without effort. Simply by working with with some overseas programmers on occasion. Some other side of my brain has def been exercised over 15 years of dev and its def not the region that computes.I love how defensive the majority of comments are.I studied joint honours maths and a language at University. Should I have become a developer?Isn\u2019t math problem solving?Another statement to prove that python is English not programming languageI wonder if language choice plays a roleMath is a very small component of programming, so is the actual coding for that matter.   Good programmers are able to think algorithymically and break complex problems down into small chunks that can be solved discretely.    Math really isn't a hurdle unless you're doing scientific or gaming programming, and even then there's a lot you can do without a strong math background.And even if you suck at both, you can still learn!  Just a lot slower....like maybe a WHOLE lot slower...but keep going you'll get there.Well, they do call them programming languages.\n\nSeriously, though, that does make a lot of sense.One thing is translate, one other thing is createPython is literally *a language* with its own syntax. Makes complete sense.Makes sense. I struggled through all of the math classes i college but got all As on all of my core comp sci classesThis has been my intuitive feel for a while. I recently said that everyone knows how to program in your brain. Sure there are some details and edge cases you don't fully conceive of. But if you know what you're trying to execute its just a matter of literally talking to the computer through a different language to implement it.First of all, mathematics are about much more than numeracy, which was the stuff actually being tested.\n\nSecond, as much as some programmers would hate me for saying this... it's Python. Not that it's a bad language, of course (languages are tools to be used whenever appropriate), but I'd love to see the differences (if there are any) with other languages like C++, Java, Haskell, Lisp... some of those emphasize things very different from Python and maybe this could impact the results.It would be a better test if they had them learn MIPS or something; beginner Python is hardly a measure of programming skills.I started going to school a few years ago studying computer programming, everyone close to me always asks me what its like/how hard is it? I always told them its more like learning a language than it is learning any math or science.Eventually programming will be just be standard speech.  Until it's to the point you just give your business requirements to an AI who spits out what you ask for.Hmm I love language, don't know if I am a strong problem-solver though. Maybe I should tryThis must be evident from India, where theres so many different dialects and then then all have to learn English on top of that, and seem to have a massive surge in highly productive code writers.. sadly, willing to take lesser pay.100% of the programmers I know well (n=3) are classicists.As someone in the programming field, learning a programming language quickly and accurately plays second fiddle to a lot of things. When hiring we care far less if you know the language we use than we care if you can write good algorithms and testable code. The latter takes far longer than the former.Programming is only math based at higher levels, where sets and algorithm development are important. \n\nI've been saying this for years! I learned French in high school and Italian before college and picked up programming quickly in college despite having no experience whatsoever.But, I'm good at languages and horrible at maths and programming.I dunno. I know Spanish and English, and learned how to read sheet music, and my code sucks balls.Speaking as someone who majored in foreign language and taught himself to code and who is now employed to code, I agree.\n\nUnderstanding a language is most important to understand the syntax with which programming requires. I\u2019ve never been a rockstar mathematician, but language has always come easily to me.\n\nFor me, learning foreign languages was intertwined with problem-solving skills because in order to communicate effectively you had to chain the skills you know together to have the other party comprehend.\n\nIMMENSELY Invaluable.in my experience most of the really good programmers i've worked with were also musicians.Mastery of words, particularly the four letter ones, made me the programmer I am today.Patterns vs randomization in summation.As a programmer and a tri lingual that sucks at math.\nI really second this.Well, that article is about me. I'm a self-taught Python programmer and before learning how to code I was working as a translator and interpreter for 10+ years. I can fully relate to above conclusion because I experienced it myself.Pretty much.  The only thing that has less to do with math is sudoku.Nueracy != mathematics. And most sub-university (and even some university) 'maths' classes don't teach mathematics.\n\nAlso this is a glimpse into the future after 'programming' is mandatoraly taught from primary school and measured by standardized tests. We'll get to see 'language skills are a stronger predictor of abstract reasoning than programming' as an article.There is a huge difference between calculator Math and college level abstract math. I think they should make that clearerI would argue that numeracy is pretty irrelevant in programming because a lot of the point of programming is for computers to be able to handle basic actions like arithmetic that for you. Who cares if you can multiply quickly in your head without writing things down etc, that\u2019s the computer\u2019s job? As as others have said, the more abstract areas of maths are more relevant skills. I noticed a large similarity between designing classes that do what you want in programming, and designing ring structures (abstract number systems) to have the properties you want in abstract algebra. I\u2019ve programmed in the context of scientific programming, game development, and a few types of engineering, so it might be different for others, ymmv.Since a lot of mathematicians are commenting here, I gotta ask:\n\nI kind of suck at handling numbers on my head, yet I\u2019m very good with language (don\u2019t judge me by my English, I\u2019m not a native speaker). In fact, I\u2019m all about humanities and I studied Law.\n\nAs someone who wants to learn mathematics (but I mean mathematics, not arithmetic) to enrich their view of the world, is there a recommended online course that I could follow?Ask me how I know the author\u2019s of this research paper have written less than 3 lines of code in total in their entire lives.That\u2019s cool, math still kept me out of that major and I went the social science/education route instead. I honestly don\u2019t see the point of needing the highest level of math offered at the university to be a comp sci majorI am horrible at language and great at math. And I love coding.Pero que lenguaje. Ingl\u00e9s?This study reminds me of my first encounters with C, in one of my introductory CS courses.\nI enjoy learning new languages, am bilingual, and grew up taking many different language courses.\n\nI remember not being the best problem solver in my intro classes, but I had an easy time picking up the syntax( I still have an easy time picking up most syntax for new languages). \n\nI came across someone in the lab having as much of a hard time as me completing the first major assignment. I remember going up to them and saying \u201chow well do you understand the objective?\u201d To which they responded: \u201cI know exactly what I want to do, but don\u2019t know how to type any of it!!!\u201d\n\nWe completed the assignment in a sitting when I told him that I felt confident in typing out his thoughts. One of the silliest moments I experienced when starting my CS degree.I\u2019m one of those testaments to this claim. I\u2019m a language guy by nature. I often try to solve everything and when I can I go crazyI just bombed a test today because it was math heavy. This makes me feel better. The intro class I'm in is broad and applies to multiple degrees which are much more math centered, so it makes sense but sucks for people who never did well with it.Acquaintance with basic syntax shouldn't be confused with actual structuring of logical functions.As if python was a real programming language... Piffle!Scotland is not a predictor of programming skills.Great so I\u2019m bad at everything nowI wish that more computer science programs in colleges in the US reflected this. Most of them are just math degrees with some programming classes, which closes the door of those of us who love programming but are less enthusiastic and competent with advanced MathDidn't Noam Chomsky discovery something similar? That human language skills are coded into our species and all languages follow a similar pattern. That those with high language skills had a higher proclivity to learn more, faster.Also, I know some research-oriented graduate programs put much more faith in verbal and reasoning GRE scores than quantitative scores.This could be quite groundbreaking. I remember not pursuing programming at school because I believed that I would struggle as a result of not being good enough at maths.\n\nIt makes me wonder how many more people have shunned programming on the same misguided basis. It would be interesting to see future studies examine whether or not this belief has shaped peoples' career decisions regarding programming and other skills that are perceived as being heavily mathematics based.Hmm. Aside from being lazy and afraid of failure, I never tried to learn to code because my math skills are essentially non-existent. \n\nHowever, I do innately possess fairly strong language and troubleshooting skills.Its almost as if it is called a programming language.No wonder me so bad at Python.Goes by the same theory \u201cif you can dodge a wrench, you can dodge a ball\u201dI'm a veteran who wants to become a programmer. Where do I start on a journey like this?\n\n I know the basics of C in C plus plusMaybe there\u2019s a chance.  I\u2019m pretty fluent in, and can read/write Japanese and Korean, but I can\u2019t even do basic math.  My brain always seemed super unbalanced to the language side.\n\nI tried programming and sucked, but I might give it another go...So I don't need to be able to solve systems of equations to make a loop in python? WowInterestingly enough the verbal sections of my standardized tests from grade school through grad school was always higher than my math scores even though my math courses were much more advanced. I initially chose this field because it came easy for me. Of course now at the graduate level actual mathematics come into play a lot more than just logical problem solving.For high level, semantic scripting languages, yes, but methinks the lower-er level you get, the more of the math skills need the chops, especially getting into deep logic and more complex, less human-readable code.They should probably fire the genius that thought math would make you good at language.I am good program guy. I know lots big word.  Me smart.In 7th, 8th, and 9th grades, I took Russian. In 10th grade I took Spanish. In 11th and 12th grades I took Spanish, French, and Latin at the same time. Then at age 18, I had a stroke caused by a brain tumor. It took a year and a half just to relearn how to speak English. I\u2019m a programmer now.Insert <Autistic laugh>How does one know if they are a good programmer, aside from professionals saying so. You can go through college and learn everything and still not be a good programmer, and you wouldn't even be able to tell. Are you slower than most professionals? Is your code well structured? How would you know?Dijkstra said one of the prerequisites of being a good programmer was the mastery of a language, English, German, Dutch, Chinese, doesn't matter but you must be able to organize your thoughts into words fluently.I am terrible with speaking and spoken language but not written. I know several programming languages.My 5yr old daughter became completely fluent in Portuguese in about 4 months living in Portugal.  I'm on 3 years and still struggle.  Kids brains are amazingI think math was much more important when everyone used lower level languages.Damn I wanted to learn programming but I suck at learning new languages, I guess it\u2019ll be a slog though and throughI had to learn FORTRAN77 I finished school right before they switched to python which I had to learn anyways. Also R, matlab, and other stuff me learning FORTRAN was a waste I have never used once.25 years of programming, and **none** of the math that was forced on me at university has ever been useful> Besides a mathematical inclination, an exceptionally good mastery of one's native tongue is the most vital asset of a competent programmer.\n\nEdsger Dijkstra in [EWD498 - How do we tell truths that might hurt?](https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD498.html)I mean they're called programming languages not programming equations so I guess on a superficial level that seems obvious.\n\nProgramming languages are an abstract representation of machine code.\n\nThe primary function of programming languages is fundamentally mathematical but but programming languages exist to simplify and abstract that layer.As a software engineer... programming is just a small part of the job. Knowing what to build, and how to define that in simple explainable language and structures, to produce maintainable, high quality code; that's the challenge as I see it. Best course I did at uni (14 years ago) was dimly titled \"Software Maintenance\" in my final year; it should have been the first class. It taught us how to enquire about the world, to understand incomprehensible code, to make theories, and test our way through errors to some desired outcome. If we'd been taught those things first I'm sure programming would have been way easier for the rest of the class.\n\nIn relation to the article; math skills seems good for procedural calculation, and some algorithmic functions. Naming things is hard, so having a good grasp of language helps. Where most engineers seem to fall down (skill cap out) is with data structures and algorithms; if they can't identify right model, and equivalent algorithm, they end up with too much code, which creates a vicious cycle of unintended complexity.My brother failed out of CompSci at UofI, went back for an English degree and graduated top of his class honestly without even trying. He is now a very successful programmer. In case anyone cares.I want to learn python. Where do I start?We do call them programming languages.I wonder if there have been any studies on ADHD and programming ability. \n\nThose with ADHD are usually strong in abstract thinking, which seems like it would be beneficial to programming.I kind of thought this was just a fact, language and problem solving is a fairly common thing in programming, although I doubt these are the only two qualities required to show true and obvious skills within such tasksExplains why I can't get into programmingIf you're a web developer then most of what you do is memorize massive amounts of words and syntax from frameworks and libraries.I don't buy it.  If you don't have a handle on logic (which requires math), knowing how to write IF THEN isn't going to be helpful.  Just another skewed stat.I work as a physics teacher and my department head once decided to do a cross analysis of every single metric we had about our A Level students (16-18 years old for those outside of the UK) to determine if anything indicated success.\n\nUnsurprisingly, what they got on their GCSEs (age 16 exam) was a big teller on how\u2019d they do by the end of the A Level course; however, the other strongest correlation was reading age. Those with higher reading ages were way more likely to get an A/A*.\n\nLanguage is very important when studying even mathematical sciences because the amount of language they use and the way it\u2019s used is varied.From my experience, programming made me smarter, and requires knowledge from all sources to do wellAren't math skills and problem-solving abilities close related?They measured participants' language abilities using the MLAT, a test used to determine a subjects ability to learn a language. As programming is a form of language - it's not surprising that someone who is great at one would also be great at the other. The skill sets are quite transferable.And I'm over here eating school glue and trying to wrap my head around KQL queries.  Y'all pray for me, or sacrifice an old P4 Dell or something...  I get what I want to query, I just don't know how to get there, and it is definitely different from SQL.So basically non English speaking programmers?The study used CodeAcademy. CodeAcademy teaches using written language. If your language skills are better you will learn from written language faster.\n\nI bet people with good language skills will learn to bake bread faster assuming the instructions are written. This doesn't mean language skills help with baking bread.\n\nThis study reveals more about choosing the right teaching methodology than some generalization about who is good at coding.Wasn't allowed to take computer studies in school because my maths marks were low. but my languages were top class. Shows what they knew.[deleted]As a programmer of some age, this is no surprise to me.  I used virtually no maths skills during my career.  I only needed to know how to calculate averages and percentages.  But it's easy to see how having to learn different programming languages is similar to learning spoken languages.Engineers at my university didn't have to take a foreign language because we had to learn programming and the professors were like \"you find a more modern language for them to learn\"Foreign languages and programming languages. They're all Greek to me.Everything I have ever seen in my professional career contradicts this study. Maybe its easier to show a rudimentary understanding quickly with language skills, but all the people I would choose to keep on my team where I work if I got to pick the most productive useful programming engineers are the once with maths degrees, their ability to effectively email would be a minor factor but I dont care what the level of english is as long as your function has basic input output, and some indication of optimization status I am fine. And your variables aren't called a,b,c unless its a temp counter then you do you just comment counter got purpose x above its declaration.I've been thinking about this for a long time. Programming is a language that can be learned just like english.I\u2019ve always known this and is in my case true.UVic forced me to take a bunch of math classes when I got my CSc degree. After 30 years of programming: 90% of the math has not come up **at all**.", "Texas Instruments' new calculator will run programs written in Python$$Texas Instruments' new calculator will run programs written in Python\n[deleted][removed][deleted]Aaaaah yes, the TI Graphic Calculator\u2026.the only consumer electronic to still cost the same since the mid-90\u2019s. \n\nBut seriously, I owe a lot of my technical know how to my TI-83, 86, and 92\u2026those were the smartphones of our generation. \ud83e\udd13Is it still 100$Hell, I'm still content with my TI-85.Holy shit! A slashdot link. I forgot all about that site.If you can program it yourself it's not really cheating. One of the things the students should learn is how to use modern tools to solve problems.The most amazing thing about this post is that Slashdot still exists.I assume this is it: https://education.ti.com/en/products/calculators/graphing-calculators/ti-84-plus-ce-pythonwill it run doom?I have a solar-powered TI scientific calculator from the early 90s and it still works like a dream! I have no idea whether this Python programming will make calculators somehow superior (since you still have to input the right numbers and know the formula and what you\u2019re trying to solve for, right? \ud83d\ude2c) but I remain impressed that they produced a product that 30 years later is still usable.For the low low price of way too much fucking moneyFor $120-$160 it should include basic wifi/bluetooth and be able to interface with other usb paraphernalia, otherwise it's.... still just a calculator easily replaced by your smart phone which has all the capabilities of any TI calculator and more.  Not saying they have to develop software for those features, just ports and system level support. It's already 2-3 times the price of a raspberry pi for... what, the same thing plus a screen and buttons, but without the network and i/o features? Those components cost pennies to a manufacturer. And so would including some meaningful I/O.Probably already banned by the College Board, therefore schools won't let you use it.The answer is always 80085\\*snake jazz intensifieshas doom been programmed on python yetWhy not just use a computer at that point?On 5+ year old hardware that somehow costs as much as a smart phone because Texas Instruments effectively has a monopoly and can FUCK OFFMost \u201cfancy\u201d graphing calculators are banned in exams anyways. \nMeanwhile my $30 sharp calculator with nice 4 line display and memory serves me perfectly fine though engineering school.\n\nIf you want to mess around with python, buy a microcontroller instead.For some reason, we needed TIs for all college classes that did calculations. But we also needed standard calculators, because the programmable ones weren\u2019t allowed on tests and quizzes.But will it run Drug wars?As a teacher, I am about damn tired of these. Big fancy graphing calculators are one of the many ways that poor students get visibly left out of high level STEM.\n\nI never could have afforded one of these and neither can many of my students.\n\nYet most of them DO have smartphones or could get a shitty one for the same price or near to it.\n\nI consider it a major economic and moral failing of our education system that we have passed this cost on to the public rather than finding a solution to the test security problem which allows phones.\n\nChromebooks can be locked down for testing. We could have done it with Android phones years ago.\n\nAnd that doesn't even getinto designing tests which aren't worth cheating onWhat is python changing in calculation?TI Py?\n\n&#x200B;\n\nMy, My.I still have (and use) my TI-83 Plus from  High School. I love that thing... I even have my TI-89 Titanium (don't use it nearly as often). Even though my college math classes (math major here...) only let us use a basic scientific calculator, all these years later I still have the muscle-memory for my TI-83.\n\nAs for programming...I have mixed feelings about python on the calculator. I'd be interested in how they are implementing it, especially with the dependency mess it could create. I preferred the ASM and BASIC on the older TIs, but I can understand wanting to make it \"easier\" for people to program the calculators. I guess I'm just stuck in the nostalgia of the non-color screens and oddly-durable and time-tested platforms of yesteryear.Python game dev about to become big.Whoa, people still use slashdot?  \n\n<notes OP's username>\n\nAhh, that explains it.I like how saying you used a TI-83 doesn't actually date you. It's about time for something new from them.I have issues buying any texas instrument product.  The ti83/84 should not cost as much as it does but because they have gotten school boards onboard with forcing parents to buy these damned things they charge tons because they know parents are required to buy them.`print(\"8008135\")`I still have my TI-85 that my parents bought in 1992 while I was in high school.  It served me well through college until I started loading binary ROM files.  Games were played and grades suffered.  Yes, it ran DOOM.  Required a little modding by changing a capacitor.  Since it drained batteries I added a wired a micro switch to enable turbo mode as needed.  Hard to believe I've been using this thing for almost 30 years.  [Calculator Picture](http://brogers.napalm.net/images/ti-85.jpg)[deleted]Too late, state tests are already using Desmos.Getting the full Monty then...This site blocks back button functionality. Can we get it on a not allowed list or something?Serious question: why not lisp? it's more expressive. Assembly would work better as well, because it'd actually teach people how the device actually functions.\n\nnote: when I'm old enough to have used slide rules in schoolMy daughter started using a TI-Nspire CX in 8th grade, and it has served her very well. I just got her a new TI-Nspire CX II CAS since she's starting college for mechanical engineering in a couple of weeks. I fully expect it to do just as well for her over the next five or six years, and for $150 see no reason to leave TI.TI can go fuck themselves. Boycott Texas.I still don't understand how those dinosaurs are still a thing in a world where every phone in released in the last decade is more powerful. They actually advertise its lack of features as a benefit. A locked down budget android phone with nothing but a graphing calc app and a python ide would be both cheaper and better.Just use call it a computer at this point or, just use a phone. Seriously, I think the term calculator is obsolete at this point.Why would anyone buy a calculator in 2021? There's not an app for that shit yet? I remember how fucking absurd TI calculator prices were...25 years ago for the shit hardware.Can they print \"vote them out\"?[deleted]$6000 and mandatory for your classes, as well.TIL \u201ccalculators\u201d are still a thingPython is one of those languages talked about on Reddit but nobody actually uses IRL. Every real developer I know in real life uses C# and Java.Noticed that on the new ones at Target last week while pointing out to my girlfriend that it must be the new excuse to keep them at $130.thats awesome.  but inputing more than a few lines would really test your nerves at hunting and pecking.you have been able to run python with nspire cx (cas) using micropython for ndless since 2012Team slitheren for the winThis only exist for schools. Phones are too easy to cheat with. So instead every student must get an iver priced calculator they'll only use for school. \n\n*Field engineers aside. They might need this if they are way the fuck out there for a while.It still play snake right?Come say hi at Cemetech.net ;)This is going to run Doom really easilyThere will never be another calculator like the TI-86 for me. Struck the perfect balance of functions I needed, programmability, and thinness. Also inspired my love for programming.What do you mean new calculator. My school is happy with the ones they got from the 70s. They are never going to buy new calculators.I swore I heard somewhere that their calculators have progressed glacially because they use the margins on them to help fund their military and aerospace R&D, but that may be overly simplified or inaccurate.New calculators? I thought anything beyond ti89 was illegalI thought they already did?With all respect. Can it run Doom?That is cool\u2026but doesn\u2019t everyone have cellphones now? Maybe 10 years too late.Who's asking for more Texas Instruments? (I know, I know, they have a government commisions)Oh no, the universes are merging.Is Skyrim available in Python yet?Makes sense there is a push to make Python the language of choice in schools for awhile sooner or later the AP Computer Science Exam will be Python based too.My friends used to play games on their TI-83/84. I cant wait for people to play doom on their calculatorsAh TI, charging tomorrows prices for last decade's tech.Why not just use a laptop? I don't get it. Why this little Gameboy computer essentially?Will this one finally be able to solve indefinite integralsThis is my new IDEWhy do people need a calculator that speaks Snake? This isn't harry potter!I coulda swore they have one that already has it or maybe it\u2019s a Casio?they dont already?I didn't think the Texas Instruments calculators ever got updated :o just sort of assumed they put out the same model and no one complainedMy kids lost my ti inspire color. I had never been so irritated about losing a calculator!I wish I had that when I was in schoolPrepare for a flurry of TI-based Visual NovelsToo bad, must buy TI-82This thing's been out for a while, but the only vendors are in the UK. I've been looking at them for the last year or so, gut just can't justify the extra costs of importing it from overseasStill have my TI-83 somewhereMy buddy programmed my ti-89 back in the day\u2026 I had no idea what he was doing but it workedUm...i know for a damn fact that ti-83s and 86s could run programs because I played freaking mario bros 3 with sound on my TI-83/86.Solid Snake!"]